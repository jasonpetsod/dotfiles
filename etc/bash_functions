function isNodeInPath()
{
    spath=`echo $1 | sed 's/:/ /g'`
    for p in $spath
    do
        [ "$p" = "$2" ] && {
            return 0
        }
    done
    return 1
}

function append() {
    if [ "$#" -eq "2" ]
    then
        path="$1"
        val="$2"
        pathvar="\$$path"
        pathval=`eval echo $pathvar`
        if [[ ! "$val" = "" ]]
        then
            if [[ "$pathval" = "" ]]
            then
                eval "export $path=$val"
                return 0
            else
                isNodeInPath $pathval $val
                if [ $? -ne 0 ]
                then
                    eval "export $path=$pathval:$val"
                    return 0
                fi
            fi
        fi
    else
        echo "Usage: $0 VARIABLE value"
    fi
    return 127
}

function prepend() {
    if [ "$#" -eq "2" ]
    then
        path="$1"
        val="$2"
        pathvar="\$$path"
        pathval=`eval echo $pathvar`
        if [[ ! "$val" = "" ]]
        then
            if [[ "$pathval" = "" ]]
            then
                eval "export $path=$val"
                return 0
            else
                isNodeInPath $pathval $val
                if [ $? -ne 0 ]
                then
                    eval "export $path=$val:$pathval"
                    return 0
                fi
            fi
        fi
    else
        echo "Usage: $0 VARIABLE value"
    fi
    return 127
}

function to() {
    mapfile="$HOME/.maps/directories.map"

    if [ ! -f $mapfile ]; then
        echo "directory map file doesn't exist"
    else 
        if [ "${1}X" = "X" ]; then
            echo "Please choose from the following 'to' destinations:"
            echo ""
            sort $mapfile | tr ':' ' ' | while read s d
            do
                printf "%-15s %s\n" $s $d
            done
        else
            key=$1
            append=""

            slash_check=`echo $key | grep '/'`	
            if [ "${slash_check}X" != "X" ]; then
                save=$key
                key=`echo $save | cut -d'/' -f1`	
                append=`echo $save | sed -e "s/$key\///"` 
                # echo "key: $key, append: $append"
            fi	

            # the directory key takes precedence
            line=`grep "^${key}:" $mapfile`
            if [ "${line}X" = "X" ]; then
                type=`dest_type $key`
            else
                type="dir"
            fi

            case $type in
                'host')
                    echo "ssh $key"
                    ssh $key	
                    ;;
                'user')
                    echo "~$key"
                    cd ~$key
                    ;;
                'dir')
                    dest=`echo $line | awk -F':' '{print $2}'` 
                    if [ "${append}X" != "X" ]; then
                        dest="$dest/$append"	
                    fi

                    if [ -d "$dest" ]; then
                        echo "$dest"
                        # dest=`eval "echo $dest"`
                        cd "$dest"
                    else
                        echo "destination '$dest' is not a directory"
                    fi
                    ;;
                *)
                    echo "Unknown type for key [$key]: \"$type\""	
                    ;;
            esac
        fi
    fi
}

function viw {
    vi `which $1`
}

function edit_config {
    vi $1
    re
}

function etc_diff {
    diff="`sudo hg st /etc`"
    if [ -n "$diff" ]; then
        diff="`echo \"$diff\" | sed -r 's#(\.\./)+#/#g'`"
        echo
        echo "WARNING: uncommitted changes in /etc:"
        echo "$diff"
        echo
        echo "Press <ENTER> to continue..."
        read
    fi
}

function agi {
    etc_diff
    sudo apt-get install $* 
    etc_diff
}

# vim: ft=sh
